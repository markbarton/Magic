<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark SkinnableContainer container.  

     @see spark.components.SkinnableContainer
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" removedFromStage="skin1_removedFromStageHandler(event)"  minHeight="100">
	<fx:Metadata>[HostComponent("shinydesign.boilerroom.views.components.container.LoadingPane")]</fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /**
             *  @private
             */
			
			import images.ImageAsset;
			
			
			protected function skin1_removedFromStageHandler(event:Event):void
			{
				//If hidden then reset to loading state
				this.currentState="loading"
			}
			
		]]>        
    </fx:Script>
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
		<s:State name="loading" />
		<s:State name="dataLoaded" />
    </s:states>
    
	
	<s:transitions>	
		<s:Transition fromState="loading" toState="dataLoaded" interruptionBehavior="end">
			<s:Sequence  >
				<s:Fade  target="{loadingThrobber}" duration="500" />	
				
				<s:Fade  target="{contentGroup}" startDelay="300" />	
				
			</s:Sequence>
		</s:Transition>
		
		<s:Transition fromState="dataLoaded" toState="loading" interruptionBehavior="end">
			<s:Sequence>
				<s:Fade  target="{contentGroup}" duration="500"/>	
				<s:Fade  target="{loadingThrobber}" startDelay="300"/>				
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	
	<!--- Defines the appearance of the SkinnableContainer class's background. -->
	<s:Rect id="background" left="0" right="0" top="0" bottom="0" radiusX="5" radiusY="5">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill" color.dataLoaded="0x797979" color="0x464646" alpha.normal="0" alpha.loading="1"/>
		</s:fill>
	</s:Rect>
    
	<!--Custom Loading Information-->
	<s:VGroup horizontalAlign="center" id="loadingThrobber" verticalAlign="middle" height="{this.height}"  left="5" right="5"  alpha.loading="1" alpha.dataLoaded="0" alpha.normal="0">
		<s:Label id="LoadingLabel" color="0xffffff" fontSize="20" width="{this.parent.width}" textAlign="center"  />
		<s:SWFLoader source="{images.ImageAsset.Gears}" width="100" height="100" id="loadingGraphic" 	/>
	</s:VGroup>
	
	
    <!--
	
        Note: setting the minimum size to 0 here so that changes to the host component's
        size will not be thwarted by this skin part's minimum size.   This is a compromise,
        more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
    -->
    <!--- @copy spark.components.SkinnableContainer#contentGroup -->
    <s:Group id="contentGroup" alpha.loading="0" alpha.dataLoaded="1" left="0" right="0" top="0" bottom="0" minWidth="0" minHeight="0" includeIn="dataLoaded">
        <s:layout>
            <s:BasicLayout/>
        </s:layout>
    </s:Group>

</s:Skin>
